!function(e){function t(t){for(var r,l,a=t[0],u=t[1],c=t[2],d=0,f=[];d<a.length;d++)l=a[d],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&f.push(o[l][0]),o[l]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(s&&s(t);f.length;)f.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,a=1;a<n.length;a++){var u=n[a];0!==o[u]&&(r=!1)}r&&(i.splice(t--,1),e=l(l.s=n[0]))}return e}var r={},o={17:0},i=[];function l(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.m=e,l.c=r,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)l.d(n,r,function(t){return e[t]}.bind(null,r));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/dist/";var a=window.webpackJsonp=window.webpackJsonp||[],u=a.push.bind(a);a.push=t,a=a.slice();for(var c=0;c<a.length;c++)t(a[c]);var s=u;i.push([115,0]),n()}({115:function(e,t,n){"use strict";const{promisify:r}=n(13),o=n(3),i=n(7);n(181);const l=n(5),a=n(4),u=n(11),c=n(1),{Dialog:s}=u,{Key:d,config:f}=CloudCmd;let p,m,y;CloudCmd.TerminalRun=t;const h=i(),C=async()=>{const{prefix:e}=CloudCmd,t=CloudCmd.prefix+"/gritty"+"/gritty.js",n=e+"/dist/terminal.css",[r]=await o(a.parallel,[t,n]);if(r){const e=r.target.src.replace(window.location.href,"");return s.alert(`file ${e} could not be loaded`)}p=!0};function g(){CloudCmd.View.hide()}function w(e){const{cwd:t=u.getCurrentDirPath(),command:n,autoClose:r,closeMessage:o="Press any key to close Terminal..."}=e,i={cwd:t,env:{ACTIVE_DIR:u.getCurrentDirPath,PASSIVE_DIR:u.getNotCurrentDirPath,CURRENT_NAME:u.getCurrentName,CURRENT_PATH:u.getCurrentPath},prefix:CloudCmd.prefixSocket+"/gritty",socketPath:CloudCmd.prefix,fontFamily:"Droid Sans Mono",command:n,autoRestart:!1};let a=!1;const{socket:c,terminal:s}=gritty(document.body,i);y=c,m=s,m.onKey(e=>{let{domEvent:t}=e;const{keyCode:n,shiftKey:r}=t;a&&g(),r&&n===d.ESC&&g()}),y.on("exit",e=>{if(h(e),r)return g();s.write("\n"+o),a=!0}),y.on("connect",l.with(b,c))}function b(e){e.emit("auth",f("username"),f("password")),e.on("reject",()=>{s.alert("Wrong credentials!")})}e.exports.init=async()=>{f("terminal")&&(c.show.load("top"),await CloudCmd.View(),await C())},e.exports.show=r((function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;if(!p)return t(null,-1);f("terminal")&&(w(e),CloudCmd.View.show(m.element,{afterShow:()=>{m.focus()},afterClose:()=>{t(null,h())}}))})),e.exports.hide=g}});
//# sourceMappingURL=terminal-run.js.map